!function () { var b = function ( c, d ) { this.pageIndex = ( c < 1 || isNaN( c ) ) ? 1 : c; this.pageSize = ( d < 1 || isNaN( d ) ) ? 1 : d; this.total = 0 }; b.prototype = { constructor: b, setTotal: function ( d ) { if ( isNaN( d ) ) { alert( "返回的total必须是数字" ) } this.total = d; var c = this.pageTotal(); if ( this.pageIndex > c ) { this.pageIndex = c } }, pageTotal: function () { return Math.ceil( this.total / this.pageSize ) }, prevPage: function () { return ( this.pageIndex - 1 ) < 1 ? NaN : ( this.pageIndex - 1 ) }, nextPage: function () { return this.pageIndex - this.pageTotal() + 1 > 0 ? NaN : ( this.pageIndex - 0 + 1 ) }, startRowIndex: function () { return this.pageIndex == 0 ? NaN : ( this.pageIndex - 1 ) * this.pageSize + 1 }, finishRowIndex: function () { return this.pageIndex == 0 ? NaN : this.pageIndex * this.pageSize } }; var a = function ( c, d ) { this.setOptions( d ); this.model = { entityArray: [], pagination: {}, sortArray: [], searchArray: [] }; this.partialView_content = function ( f, e ) { var g = this; this.$tables.each( function () { var j = $( this ), k = j.find( g.options.listHeadSelector ), h = j.find( g.options.listBodySelector ); h.empty(); for ( index in f ) { var i = f[index]; var l = "<tr>"; k.each( function () { var m = $( this ), o = m.attr( "data-field" ), n = g.options.fieldMapToCell( o, i, parseInt( index ), e ); l += n } ); l += "</tr>"; h.append( l ) } } ) }; this.partialView_page = function ( q ) { if ( !this.$pageList ) { return } this.$pageList.empty(); if ( q.total == 0 ) { this.$pageList.hide(); return } var m = q.pageIndex, g = q.pageTotal(), j = this.options.pageItemAmount, f = q.prevPage(), p = q.nextPage(), i = this; var r = m - Math.floor( j / 2 ); if ( r < 1 ) { r = 1 } var e = r + j - 1; if ( e > g ) { e = g; r = e - j + 1; if ( r < 1 ) { r = 1 } } for ( var h = r; h <= e; h++ ) { var t = ( m == h ) ? this.options.pageActiveItemTemplate : this.options.pageItemTemplate, l = $( t.replace( "{0}", h ) ); l.on( "click", function ( x ) { x.preventDefault(); i.action_page( this.innerText ) } ).appendTo( this.$pageList ) } var n = isNaN( f ) ? this.options.pageDisabledItemTemplate : this.options.pageItemTemplate, u = $( n.replace( "{0}", "&laquo;" ) ); if ( !isNaN( f ) ) { u.on( "click", function ( x ) { x.preventDefault(); i.action_page( f ) } ) } u.prependTo( this.$pageList ); var k = isNaN( p ) ? this.options.pageDisabledItemTemplate : this.options.pageItemTemplate, v = $( k.replace( "{0}", "&raquo;" ) ); if ( !isNaN( p ) ) { v.on( "click", function ( x ) { x.preventDefault(); i.action_page( p ) } ) } v.appendTo( this.$pageList ); this.$pageList.show(); if ( !this.$pageInfo ) { return } var w = q.total, s = q.pageSize, o = this.options.pageInfoTemplate.replace( "{pageIndex}", m ).replace( "{pageSize}", s ).replace( "{pageTotal}", g ).replace( "{total}", w ); this.$pageInfo.html( o ) }; this.partialView_sort = function ( e ) { var f = this; this.$sortThs.each( function () { var g = $( this ), i = g.attr( "data-field" ), h = $.grep( e, function ( l, k ) { return l.name == i } ); if ( h.length > 0 ) { var j = h[0].value; if ( j ) { g.attr( "aria-sort", "ascending" ); f.options.sortAsendingCallback( g ) } else { g.attr( "aria-sort", "descending" ); f.options.sortDescendingCallback( g ) } } else { g.attr( "aria-sort", "none" ); f.options.sortNoneCallback( g ) } } ) }; this.partialView_search = function ( e ) { }; this.init( c ) }; a.prototype = { constructor: a, init: function ( c ) { this.$tables = c.find( "table" ); this.$pageList = c.find( this.options.pageListSelector ); this.$pageInfo = c.find( this.options.pageInfoSelector ); this.$sortThs = c.find( this.options.listHeadSelector ).filter( "[aria-sort]" ); this.$searchBoxes = c.find( ":input[data-search]" ); var d = this; d.model.pagination = new b( this.options.pageIndex, this.options.pageSize ); this.$sortThs.css( "cursor", "pointer" ).each( function () { var e = $( this ), g = e.attr( "data-field" ), f = e.attr( "aria-sort" ), h; if ( f == "ascending" ) { h = true } else { if ( f == "descending" ) { h = false } else { h = null } } if ( h != null ) { d.model.sortArray.push( { name: g, value: h } ) } } ).on( "click", function ( g ) { var e = $( this ), h = e.attr( "data-field" ), f = e.attr( "aria-sort" ), i; if ( f == "ascending" ) { i = true } else { if ( f == "descending" ) { i = false } else { i = null } } d.action_sort( h, !i, g.ctrlKey || g.metaKey ) } ); this.$searchBoxes.each( function () { var g = $( this ), e = g.attr( "data-search" ), f = g.val(); if ( f ) { d.model.searchArray.push( { name: e, value: f } ) } } ).on( "change", function ( f ) { var h = $( this ), e = h.attr( "data-search" ), g = h.val(); d.action_search( e, g ) } ) }, getDataFromServer: function ( c, e, f, h ) { var d = { pageIndex: c, pageSize: e, sortArray: $.param( f ).replace( /\=/g, this.options.splitChar ).split( "&" ), searchArray: $.param( h ).replace( /\=/g, this.options.splitChar ).split( "&" ), time: new Date().getTime() }; var g = this; g.options.onLoading( d ); $.ajax( { url: this.options.dataUrl, data: d, async: false, success: function ( i ) { g.model.entityArray = i.entityArray; g.model.pagination.setTotal( i.total ) }, error: function ( i, k, j ) { alert( j ) }, type: "get", dataType: "json" } ) }, setOptions: function ( c ) { this.options = c }, getOptions: function () { return this.options }, action_page: function ( c ) { this.model.pagination.pageIndex = c; this.action_refresh( true, false, false ) }, action_sort: function ( e, f, d ) { var c = { name: e, value: f }; if ( d ) { var g = -1; $.each( this.model.sortArray, function ( h, i ) { if ( i.name == e ) { g = h; return } } ); if ( g != -1 ) { this.model.sortArray.splice( g, 1 ) } this.model.sortArray.push( c ) } else { this.model.sortArray = [c] } this.action_refresh( false, true, false ) }, action_search: function ( c, e ) { this.model.pagination.pageIndex = 1; var d = { name: c, value: e }, f = -1; $.each( this.model.searchArray, function ( g, h ) { if ( h.name == c ) { f = g; return } } ); if ( f != -1 ) { this.model.searchArray.splice( f, 1 ) } if ( e ) { this.model.searchArray.push( d ) } this.action_refresh( true, false, true ) }, action_refresh: function ( d, e, c ) { this.getDataFromServer( this.model.pagination.pageIndex, this.model.pagination.pageSize, this.model.sortArray, this.model.searchArray ); this.options.onDrawing( this.model ); this.partialView_content( this.model.entityArray, parseInt( this.model.pagination.startRowIndex() ) ); d && this.partialView_page( this.model.pagination ); e && this.partialView_sort( this.model.sortArray ); c && this.partialView_search( this.model.searchArray ); this.options.onLoad( this.model ) } }; $.fn.lightgrid = function ( c ) { return this.each( function () { var f = $( this ), e = f.data( "lightgrid" ); if ( !e ) { var d = $.extend( {}, $.fn.lightgrid.defaults, typeof c == "object" && c ); f.data( "lightgrid", e = new a( f, d ) ) } else { var d = $.extend( {}, e.getOptions(), typeof c == "object" && c ); e.setOptions( d ); e.init( f ) } e.action_refresh( true, true, true ) } ) }; $.fn.lightgrid.defaults = { dataUrl: "", splitChar: "_", onLoading: function ( c ) { }, onDrawing: function ( c ) { }, onLoad: function ( c ) { }, listHeadSelector: "thead th", listBodySelector: "tbody", fieldMapToCell: function ( g, c, e, f ) { var d = g ? c[g] : f + e; return "<td>" + d + "</td>" }, pageListSelector: "ul.pagination", pageIndex: 1, pageSize: 10, pageItemAmount: 5, pageItemTemplate: '<li><a href="#">{0}</a></li>', pageActiveItemTemplate: '<li class="active"><a href="#">{0}</a></li>', pageDisabledItemTemplate: '<li class="disabled"><a href="#">{0}</a></li>', pageInfoSelector: ".pageInfo", pageInfoTemplate: "显示第 {pageIndex}/{pageTotal} 页，共 {total} 项记录", sortAsendingCallback: function ( c ) { if ( c.find( ".caret" ).length == 0 ) { c.append( '<span class="caret"></span>' ) } c.addClass( "dropup" ) }, sortDescendingCallback: function ( c ) { if ( c.find( ".caret" ).length == 0 ) { c.append( '<span class="caret"></span>' ) } c.removeClass( "dropup" ) }, sortNoneCallback: function ( c ) { c.removeClass( "dropup" ).find( ".caret" ).remove() }, } }( window.jQuery );